knitr::opts_chunk$set(echo = TRUE)
install.packages("pacman")
pacman::p_load(tidyverse, tidymodels, gridExtra, ggplot)
knitr::opts_chunk$set(echo = TRUE)
# Specify the folder path
folder_path <- "nelson_data"
# List all CSV files in the folder
files <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE)
# Initialize an empty list to store the data frames
dfs <- list()
# Load each CSV file into a data frame and store it in the list
for (file in files) {
df <- read.csv(file)
dfs[[length(dfs) + 1]] <- df
}
# Combine all data frames into a single data frame
combined_df <- do.call(rbind, dfs)
# Print the combined data frame
print(combined_df)
filter <- subset(combined_df, combined_df["answer"] != "escape")
write.csv(filter,"nelson.csv")
filter <- subset(filter,filter[4:9,])
filter <- filter[4:9,]
head(filter)
filter[4]
filter[4:9]
filter <- filter[4:9]
head(filter)
fwrite.csv(filter,"nelson.csv")
write.csv(filter,"nelson.csv")
print(filter)
filter <- subset(combined_df, combined_df["answer"] != "escape")
filter[,4:9]
filter <- filter[,4:9]
print(filter)
new <- filter[-which(rownames(filter) %in% remove_rows), ]
remove_rows <- c(39,74,77,81,82,78,83,84)
new <- filter[-which(rownames(filter) %in% remove_rows), ]
print(new)
write.csv(new,"nelson.csv")
pacman::p_load(tidytext,textdata)
#add sentiment
sent <- new %>%
rename(sentiment=comment)
library(dplyr)
pacman::p_load(tidytext,textdata)
#add sentiment
sent <- new %>%
rename(sentiment=comment)
pacman::p_load(tidytext,textdata)
#add sentiment
sent <- new %>%
mutate(sentiment=NA)
sent$sentiment <- as.character(sent$sentiment)
library(tidyr)
senti <- sent %>%
unnest_tokens(word, answer) %>%
inner_join(get_sentiments("nrc"), by = c(word = "word"))
sent_with_tokens <- sent %>%
unnest_tokens(word, answer) %>%
left_join(get_sentiments("nrc"), by = c(word = "word")) %>%
group_by(id,task) %>%
distinct(word, .keep_all = TRUE) %>%
mutate(sentiment.x="yeahe")
sent_with_tokens <- sent %>%
unnest_tokens(word, answer) %>%
left_join(get_sentiments("nrc"), by = c(word = "word")) %>%
group_by(group,task) %>%
distinct(word, .keep_all = TRUE) %>%
mutate(sentiment.x="yeahe")
sentim <- sent_with_tokens[complete.cases(sent_with_tokens), ]
sent$task <- as.factor(sent$task)
sent$group <- as.factor(sent$group)
set.seed(1234)
library(wordcloud)
install.packages("tm")
install.packages("slam")
library(tm)
library(slam)
sent$group <- as.character(sent$group)
mt <- filter(sent, task=="WordsOfMt Nelson Oval" )
hob <- filter(sent, task=="WordsOfengaging outdoor area")
# Define color palette
colors <- colorRampPalette(c("red", "orange", "yellow"))(100)
# Map sentiment scores to colors
color_map_mt <- cut(mt$sentiment, breaks = 100, labels = colors)
wordcloud::wordcloud(mt$answer,min.freq=1, )
wordcloud::wordcloud(hob$answer, min.freq=1, random.order=FALSE)
wordcloud::wordcloud(hob$answer, min.freq=1, random.order=FALSE)
wordcloud::wordcloud(mt$answer,min.freq=1, )
wordcloud::wordcloud(mt$answer,min.freq=1, )
wordcloud::wordcloud(hob$answer, min.freq=1, random.order=FALSE)
